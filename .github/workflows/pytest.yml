name: Unit Test - API

on:
  pull_request:
    types: [assigned, opened, synchronize, reopened]

jobs:
  pytest:
    runs-on: ubuntu-latest
    environment: CI Environment
    steps:
      - uses: actions/checkout@v2
      - uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true
      - name: Bring up Services and Run Tests
        run: |
          docker-compose -f docker-compose-pipeline.yml build
          docker-compose -f docker-compose-pipeline.yml up -d
          docker-compose -f docker-compose-pipeline.yml exec -T api pytest tests/ --cov --junitxml=pytest.xml --cov-report=term-missing --cov-fail-under=80 | tee pytest-coverage.txt
          echo "STATUS=$(cat pytest-coverage.txt | grep 'Required test' | awk '{ print $1 }')" >> $GITHUB_ENV
          echo "FAILED=$(cat pytest.xml | awk -F'=' '{print $5}' | awk -F' ' '{gsub(/"/, "", $1); print $1}')" >> $GITHUB_ENV
        continue-on-error: true
      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        if: ${{ always() && github.ref != 'refs/heads/master' }}
        with:
          create-new-comment: true
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml
      - name: Stop Services
        run: docker compose -f docker-compose-pipeline.yml down
      - name: Evaluate Coverage
        if: ${{ (env.STATUS == 'FAIL') || (env.FAILED > 0) }}
        run: exit 1
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ always() && github.ref != 'refs/heads/master' }}
        env:
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: pytest job status - ${{ job.status }}
          SLACK_TITLE: Admin Settings API Tests Stats
          SLACK_ICON_EMOJI: ":terminator:"
          SLACK_USERNAME: Gandalff
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_FOOTER: ''